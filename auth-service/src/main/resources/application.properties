spring.application.name=auth-service

server.port=${AUTH_SERVICE_PORT:8090}

spring.datasource.url=${AUTH_DB_URL:jdbc:h2:mem:persons-db}
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=profile,email


# Configuration Keycloak
spring.security.oauth2.client.registration.keycloak.client-id=${AUTH_SERVICE_CLIENT_ID:plateforme-client}
spring.security.oauth2.client.registration.keycloak.client-secret=${AUTH_SERVICE_CLIENT_SECRET:your-keycloak-client-secret}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,email,offline_access
spring.security.oauth2.client.registration.keycloak.redirect-uri=${AUTH_SERVICE_REDIRECT_URI:http://localhost:8090/login/oauth2/code/keycloak}

# Provider Keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:http://localhost:8080/realms/plateforme-realm}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Logging
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.org.keycloak=${LOGGING_LEVEL_KEYCLOAK:DEBUG}